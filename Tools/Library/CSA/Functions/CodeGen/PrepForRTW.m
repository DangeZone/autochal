% PREPFORRTW Copies Simulink DocBlock and Requirement Info into Block Description fields for RTW Code Generation
% -------------------------- UNCLASSIFIED ---------------------------
% ------------------ ITAR Controlled Work Product -------------------
% -------------- Northrop Grumman Proprietary Level 1 ---------------
% PrepForRTW:
%   Copies Simulink DocBlock and Requirement information over into each
%   block's Description field so that they will show up in the auto code
%   when generated by Realtime Workshop.
%
% SYNTAX:
%	lstChanges = PrepForRTW(modelName, varargin, 'PropertyName', PropertyValue)
%	lstChanges = PrepForRTW(modelName, varargin)
%	lstChanges = PrepForRTW(modelName)
%
% INPUTS:
%	Name     	Size		Units		Description
%	modelName	'string'    [char]      Name of Simulink Model
%	varargin	[N/A]		[varies]	Optional function inputs that
%	     		        				 should be entered in pairs.
%	     		        				 See the 'VARARGIN' section
%	     		        				 below for more details
% OUTPUTS:
%	Name     	Size		Units		Description
%	lstChanges  {'string'}  N/A         Cell array of strings with list of
%                                       blocks and requirements that 
%                                       were copied
%
% NOTES:
%	<Any Additional Information>
%
%	VARARGIN PROPERTIES:
%	PropertyName		PropertyValue	Default		Description
%	<PropertyName>		<units>			<Default>	<Description>
%
% EXAMPLES:
%	% <Enter Description of Example #1>
%	[] = PrepForRTW(modelName, varargin)
%	% <Copy expected outputs from Command Window>
%
% SOURCE DOCUMENTATION:
% <Enter as many sources as needed.  Some popular ones are listed here.>
% <Note, these citation examples came from: http://honolulu.hawaii.edu/legacylib/mlahcc.html >
% Website Citation:
% [1]   Author.  "Title of Web Page." Title of the Site. Editor. Dat and/or Version Number.
%       Date of Access <URL>
% Book with One Author:
% [2]   Author Last Name, Author First Name. Title of Book. City of Publication: Publisher, Year. Eqn #, pg #
% Book with Two Author:
% [3]   Author #1 Last Name, Author #1 First Name, and Author #2 Full Name. Title of Book. City of Publication: Publisher, Year. Eqn #, pg #
%
% HYPERLINKS:
%	Source function: <a href="matlab:edit PrepForRTW.m">PrepForRTW.m</a>
%	  Driver script: <a href="matlab:edit Driver_PrepForRTW.m">Driver_PrepForRTW.m</a>
%	  Documentation: <a href="matlab:pptOpen('PrepForRTW_Function_Documentation.pptx');">PrepForRTW_Function_Documentation.pptx</a>
%
% See also <add relevant functions>
%
%
% VERIFICATION DETAILS:
% Verified: No
% Trac Page: http://vodka.ccc.northgrum.com/trac/CSA/ticket/623
%
% Copyright Northrop Grumman Corp 2011
% Maintained by: GN&C Technology (Dept 9V21): Aerospace Systems - Redondo Beach, CA
% http://vodka.ccc.northgrum.com/trac/CSA/

% Subversion Revision Information At Last Commit
% $URL: $
% $Rev: $
% $Date: $
% $Author: $

function lstChanges = PrepForRTW(modelName, varargin)

%% Debugging & Display Utilities:
spc  = sprintf(' ');                                % One Single Space
tab  = sprintf('\t');                               % One Tab
endl = sprintf('\n');                               % Line Return
[mfpath,mfnam] = fileparts(mfilename('fullpath'));  % Full Path to Function, Name of Function
mfspc = char(ones(1,length(mfnam))*spc);            % String of Spaces the length of the function name
mlink = ['<a href = "matlab:help ' mfnam '">' mfnam '</a>']; % Hyperlink to mask help that can be added to a error disp

% Examples of Different Display Formats:
% disp([mfnam '>> Output with filename included...' ]);
% disp([mfspc '>> further outputs will be justified the same']);
% disp([mfspc '>> CAUTION: or mfnam: note lack of space after">>"']);
% disp([mfnam '>> WARNING: <- Very important warning (does not terminate)']);
% disp([mfnam '>> ERROR: <-if followed by "return" used if continued exit desired']);
% errstr = [mfnam '>> ERROR: <define error here> See ' mlink ' help'];      % <-- Couple with error function
% error([mfnam 'class:file:Identifier'], errstr);    % Call error function with error string

%% Initialize Outputs:
%	No Outputs Specified

%% Input Argument Conditioning:
% Pick out Properties Entered via varargin
% [<PropertyValue>, varargin]  = format_varargin('<PropertyValue', <Default>, 2, varargin);

switch(nargin)
    case 0
        modelName= '';
        %       case 1
        %
        %       case 2
        %
end

if(isempty(modelName))
    modelName = bdroot;
end

%% Main Function:

try
set_param(bdroot, 'InsertBlockDesc', true);
catch
end

iC = 0; lstChanges = {};

% Find All SubSystems
lstBlocks = find_system(modelName, 'FindAll', 'on', 'LookUnderMasks', 'all', ...
    'FollowLinks', 'off', 'BlockType', 'SubSystem');

for i = 1:size(lstBlocks, 1)
    curBlock = lstBlocks(i);
    curParent = get_param(lstBlocks(i), 'Parent');
    curName = get_param(lstBlocks(i), 'Name');

    %% Cleanup #1:
    %  Clear Block's Description Field
    ParentDesc = get_param(curBlock, 'Description');
    if(~isempty(ParentDesc))
        ParentDesc = '';
        set_param(curBlock, 'Description', ParentDesc);
        iC = iC + 1;
        lstChanges(iC,:) = {sprintf('Clearing Block Description: %s', curParent)};
    end
    
    %% Cleanup #2:
    %  Copy DocBlock Information into the Block's Description Field
    flgNameMatch = ~isempty(strfind(curName, 'DocBlock'));

    if(flgNameMatch)
        UserData = get_param(lstBlocks(i), 'UserData');
        if(isstruct(UserData))
            DocBlockText = UserData.content;
        else
            DocBlockText = UserData;
        end
        ParentDesc = DocBlockText;
        if(~isempty(DocBlockText))
            set_param(curParent, 'Description', ParentDesc);
            iC = iC + 1;
            lstChanges(iC,:) = {sprintf('Copied DocBlock Data into Block Description: %s', curParent)};
        end
    end
end

for i = 1:size(lstBlocks, 1)
    curBlock = lstBlocks(i);
    curParent = get_param(lstBlocks(i), 'Parent');
    curName = get_param(lstBlocks(i), 'Name');
    
    %% Cleaup #2: Requirements
    [strReqt] = FormatDoorsReqt(curBlock);
    if(~isempty(strReqt))
        BlockDesc = get_param(curBlock, 'Description');
        BlockDesc = [BlockDesc strReqt];
        set_param(curBlock, 'Description', BlockDesc);
        iC = iC + 1;
        lstChanges(iC,:) = {sprintf('Copied Requirments Data into Block Description: %s', curParent)};
    end
end

end % << End of function PrepForRTW >>

%% REVISION HISTORY
% YYMMDD INI: note
% 101026 MWS: Created function using CreateNewFunc
%**Add New Revision notes to TOP of list**

% Initials Identification:
% INI: FullName     : Email                 : NGGN Username
% MWS: Mike Sufana  : mike.sufana@ngc.com   : sufanmi

%% FOOTER
%
% WARNING - This document contains technical data whose export is
%   restricted by the Arms Export Control Act (Title 22, U.S.C. 2751 et
%   seq.) or the Export Administration Act of 1979, as amended, Title 50,
%   U.S.C., App.2401et seq. Violation of these export-control laws is
%   subject to severe civil and/or criminal penalties.
%
% -------------- Northrop Grumman Proprietary Level 1 ---------------
% ------------------ ITAR Controlled Work Product -------------------
% -------------------------- UNCLASSIFIED ---------------------------
